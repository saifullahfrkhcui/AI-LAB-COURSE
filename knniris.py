# -*- coding: utf-8 -*-
"""Knniris.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jSchnDKcjIFBkcKdkwGX88UDCSqsjb7n
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load Iris data (only first two features)
iris = load_iris()
X = iris.data[:, :2]
Y = iris.target

# Split data into train and test sets (70% train, 30% test)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)

# Create and train KNN classifier
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train, Y_train)

# Predict on train and test sets
train_pred = knn.predict(X_train)
test_pred = knn.predict(X_test)

# Calculate accuracies
train_acc = accuracy_score(Y_train, train_pred)
test_acc = accuracy_score(Y_test, test_pred)

print(f"Training Accuracy: {train_acc:.3f}")
print(f"Testing Accuracy: {test_acc:.3f}")

# Interpretation
if train_acc - test_acc > 0.1:
    print("Possible Overfitting: Train accuracy is much higher than Test accuracy.")
elif test_acc > 0.7:
    print("Good fit: Both train and test accuracy are reasonably high.")
else:
    print("Possible Underfitting: Both accuracies are low.")